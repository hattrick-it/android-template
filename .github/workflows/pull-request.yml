name: Android Pull Request

on:
  pull_request:
    types: [ opened, reopened ]

  #For Firebase Apps
  #env:
  #FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}

jobs:
  test:
    name: Android Pull Request Workflow
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      #For Firebase Apps
      # Decode Google services file
      #- name: Decode google-services.json
        #run: |
          #echo $FIREBASE_CONFIG > app/google-services.json

      # Cache
      - name: Cache Gradle Files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: cache-gradle

      # Lint
      - name: Run Android Linter
        run: ./gradlew lint

      # Unit Test
      - name: Unit tests
        run: bash ./gradlew test
      - name: Save Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: app/build/test-results/testReleaseUnitTest/*.xml

      # Slack Notification
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: ${{ github.event.pull_request.title }}
          SLACK_MESSAGE: ${{ github.event.pull_request.body }}
          SLACK_FOOTER: ${{ github.event.pull_request.html_url }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: Pull Request
          SLACK_ICON: https://media-exp1.licdn.com/dms/image/C4E0BAQEmSneWeuqZJQ/company-logo_200_200/0/1589546919698?e=2159024400&v=beta&t=jp8a6n1opDcCZOOpR4v5qNXKOfZG_hk0MIT531rnsH8
          #TODO generate webhook with https://slack.com/apps/A0F7XDUAZ-incoming-webhooks and save it in github secrets
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}